C51 COMPILER V9.01   MAIN                                                                  01/24/2019 12:23:54 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "key.h"
   2          #include "serial.h"
   3          
   4          #define STATE_INPUTTING 0
   5          #define STATE_VALIAD 1
   6          #define STATE_INVALIAD 2
   7          #define STATE_DOOR_OPEN 3
   8          #define STATE_ALERTING 4
   9          
  10          // 轮询开门状态的间隔, 单位(ms)
  11          #define POLL_INTERVAL 10000
  12          
  13          // 门没有关闭的报警
  14          #define ALERT_INTERVAL 5000
  15          
  16          // keycode 和 键盘按键之间的对应
  17          // 27 => A, 28 => B, 29 => C, 30 => D
  18          #define CLOSE_DOOR_KEY_CODE 30 
  19          #define OPEN_DOOR_KEY_CODE 29
  20          #define REINPUT_KEY_CODE 28
  21          #define INPUT_CONFIRM_KEY_CODE 27
  22          
  23          u8 curPos = 0;
  24          u8 first_time = 1;
  25          u8 info_true[8] = {26, 26, 26, 26, 26, 26, 26, 26};
  26          u8 info_false[8] = {15, 15, 15, 15, 15, 15, 15, 15};
  27          u8 state = 0;
  28          u8 password[8];
  29          
  30          // RTC related
  31          // u8   hour,minute,second;     //RTC变量
  32          // u8 rtc[8];
  33          
  34          // 记录门打开的时间
  35          u8 door_open_time = 0;
  36          
  37          void reset_led(){
  38   1          u8 i;
  39   1          for(i=0;i<8;i++){
  40   2              LED8[i] = DIS_;
  41   2          }
  42   1      }
  43          
  44          // void updateRTC(){
  45              
  46          //     if(hour >= 10) {
  47          //         rtc[0] = hour / 10;  
  48          //     } else {
  49          //         rtc[0] = DIS_BLACK;
  50          //     }
  51          //      rtc[1] = hour % 10;
  52          //      rtc[2] = DIS_;
  53          //      rtc[3] = minute / 10;
  54          //      rtc[4] = minute % 10;
  55          //      rtc[5] = DIS_;
C51 COMPILER V9.01   MAIN                                                                  01/24/2019 12:23:54 PAGE 2   

  56          //      rtc[6] = second / 10;
  57          //      rtc[7] = second % 10;
  58          // }
  59          
  60          void DisplayInfo(u8* info) {
  61   1          u8 i;
  62   1          for(i = 0; i < 8; i++) {
  63   2              LED8[i] = info[i];
  64   2          }
  65   1      
  66   1      }
  67          
  68          void initPassword(){
  69   1          u8 i;
  70   1          curPos = 0;
  71   1          for(i = 0; i < 8; i++) {
  72   2              password[i] = DIS_;
  73   2          }
  74   1          password[8] = 0;
  75   1      }
  76          
  77          void alert() {
  78   1          // 点亮LED
  79   1          P47 = 0;
  80   1          P46 = 0;
  81   1          // 发送报警信息到服务器
  82   1          PrintString1("aaaaaaaa");
  83   1      }
  84          
  85          void openDoorWithoutAlert() {
  86   1          // 取消报警, 进入正常的看门状态显示
  87   1          P47 = 1;
  88   1          P46 = 0;
  89   1          state = STATE_DOOR_OPEN;
  90   1      }
  91          
  92          void pollState() {
  93   1          if(state == STATE_DOOR_OPEN) {
  94   2              PrintString1("oooooooo");
  95   2          } else {
  96   2              PrintString1("cccccccc");       
  97   2          }
  98   1      }
  99          
 100          void cloesDoor() {
 101   1          // 关门，所有 led 灯关闭
 102   1          P47 = 1;
 103   1          P46 = 1;
 104   1          state = STATE_INPUTTING;
 105   1          initPassword();
 106   1      }
 107          
 108          
 109          void main(void) {
 110   1      
 111   1          u8 remoteKeyCode = 0;
 112   1          serial_init();
 113   1          key_init();
 114   1              initPassword();
 115   1          state = STATE_INPUTTING;
 116   1          // openDoorWithoutAlert();
 117   1          while(1)
C51 COMPILER V9.01   MAIN                                                                  01/24/2019 12:23:54 PAGE 3   

 118   1          {
 119   2              // 检测是否收到数据
 120   2              if((TX1_Cnt != RX1_Cnt) && (!B_TX1_Busy))
 121   2              {
 122   3                  // 收到数据，并将数据中的键码赋给变量remoteKeyCode
 123   3                  remoteKeyCode = RX1_Buffer[TX1_Cnt];
 124   3                  if(++TX1_Cnt >= UART1_BUF_LENGTH)   TX1_Cnt = 0;
 125   3              }
 126   2      
 127   2              // 受时间控制的功能
 128   2              if(B_1ms)
 129   2              {
 130   3                  B_1ms = 0;
 131   3      
 132   3                  // 记录当前门锁的状态，发送到服务器
 133   3                  if(msecond >= POLL_INTERVAL) {
 134   4                      msecond = 0;
 135   4                      pollState();
 136   4                  }
 137   3      
 138   3                  if(state == STATE_DOOR_OPEN && msecond % ALERT_INTERVAL == 0) {
 139   4                      if(door_open_time > 5) {
 140   5                          door_open_time = 0;
 141   5                          alert();
 142   5                      }
 143   4                      door_open_time ++;
 144   4                  }
 145   3      
 146   3                  if(++msecond % 200 == 0)
 147   3                  {
 148   4                      // 根据状态显示特定的数码管
 149   4                      switch(state) {
 150   5                          case STATE_INPUTTING:
 151   5                              // ReadRTC();
 152   5                              // DisplayRTC();
 153   5                              if(password[0] == DIS_) {
 154   6                                  ReadRTC();
 155   6                                  DisplayRTC();
 156   6                              } else {
 157   6                                  DisplayInfo(password);
 158   6                              }
 159   5                              break;
 160   5                          case STATE_VALIAD:
 161   5                              DisplayInfo(info_true);
 162   5                              break;
 163   5                          case STATE_INVALIAD:
 164   5                              DisplayInfo(info_false);                
 165   5                              break;
 166   5                          default: break;
 167   5                      }
 168   4                  }
 169   3      
 170   3                  
 171   3                  if(++cnt50ms >= 50)
 172   3                  {
 173   4                      cnt50ms = 0;
 174   4                      IO_KeyScan();
 175   4                  }
 176   3      
 177   3                  if(KeyCode != 0)
 178   3                  {
 179   4                      if(state == STATE_INPUTTING && KeyCode >= 17 &&  KeyCode <= 26)              
C51 COMPILER V9.01   MAIN                                                                  01/24/2019 12:23:54 PAGE 4   

 180   4                      {
 181   5                          password[curPos++] = KeyCode % 17;
 182   5                      } else if(KeyCode == INPUT_CONFIRM_KEY_CODE) {
 183   5                          if(curPos == 8) {
 184   6                                                      u8 i;
 185   6                                                      u8 tmp[8];
 186   6                                                      for(i = 0; i < 8; i++) {
 187   7                                                              tmp[i] = password[i] + 48;                                                      
 188   7                                                      }
 189   6                              PrintString1(tmp);
 190   6                          }
 191   5                      } else if(state == STATE_INVALIAD && KeyCode == REINPUT_KEY_CODE) {
 192   5                          state = STATE_INPUTTING;
 193   5                          initPassword();
 194   5                      } else if(state == STATE_DOOR_OPEN && KeyCode == CLOSE_DOOR_KEY_CODE) {
 195   5                          // 如果有报警则取消报警
 196   5                          cloesDoor();
 197   5                      } else if(state == STATE_VALIAD && KeyCode == OPEN_DOOR_KEY_CODE) {
 198   5                          // 直接开门
 199   5                          openDoorWithoutAlert();
 200   5                      }
 201   4      
 202   4                      KeyCode = 0;
 203   4                  }
 204   3      
 205   3                  if(remoteKeyCode != 0) {
 206   4      
 207   4                      if(remoteKeyCode == 't') {
 208   5                          state = STATE_VALIAD;
 209   5                      } else if (remoteKeyCode == 'f') {
 210   5                          state = STATE_INVALIAD;                    
 211   5                      } else if (remoteKeyCode == 'o') {
 212   5                          // 提供远程开门的服务
 213   5                          openDoorWithoutAlert();
 214   5                      }
 215   4      
 216   4                      remoteKeyCode = 0;
 217   4                  }
 218   3              }
 219   2          }
 220   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1506    ----
   CONSTANT SIZE    =     94    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     50      32
   IDATA SIZE       =     32    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
